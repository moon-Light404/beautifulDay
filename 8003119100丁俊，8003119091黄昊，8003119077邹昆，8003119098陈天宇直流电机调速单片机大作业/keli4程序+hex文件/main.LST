C51 COMPILER V9.02   MAIN                                                                  01/10/2021 16:56:46 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Proteus\KK1\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1                                                                   /*************************************************************************************************
             -*************/
   2          #include<reg51.h>
   3          #include<lcd1602.h>
   4          /*********************************************************************************************************
             -*****/
   5          #ifndef uchar
              #define uchar unsigned char
              #endif
   8          #ifndef uint 
              #define uint unsigned int
              #endif;
  11          /*********************************************************************************************************
             -*****/
  12          #define KB      P0      //键盘P0
  13          sbit M0=P1^0;           //步进电机驱动IO
  14          sbit M1=P1^1;
  15          sbit M2=P1^2;
  16          sbit M3=P1^3;
  17          sbit K0=P1^4;           //独立按键
  18          sbit K1=P1^5;
  19          sbit K2=P1^6;
  20          sbit K3=P1^7;
  21          sbit K_Rs=P3^2;
  22          /*********************************************************************************************************
             -*****/
  23          uchar Disp1[]="Mode:Stop AntCLK";
  24          uchar Disp2[]="Speed: 100 r/min";
  25          uchar Kb_loc[]  ={0xfe,0xfd,0xfb,0xf7}; //键盘逐行扫描
  26          uchar Step[]            ={0x0c,0x0d,0x09,0x0b,0x03,0x07,0x06,0x0e};     //单双步8拍(正转)
  27          uint CT0=0;                     //定时器T0计数
  28          uint Cyc=80;            //电机八分频
  29          char M=0,Dir=1; //第M步,方向(1为顺时针正转,-1为逆时针反转)
  30          bit Rs=0;
  31          /*********************************************************************************************************
             -*****/
  32          void delay(uint i)              //延时函数
  33          {
  34   1              for( ;i>0;i--);
  35   1      }
  36          /***********************************************键盘读取函数**********************************************
             -******/
  37          uchar Key_scan(void)    //键盘读取函数
  38          {
  39   1              uchar i=0;
  40   1              uchar key=0;                            //键盘位置编码
  41   1              KB=0xf0;                                                //低4位清零
  42   1              for(i=0;i<4;i++)                
  43   1              {
  44   2                      KB=Kb_loc[i];                   //低4位循环扫描(行)
  45   2                      if(KB!=Kb_loc[i])       //有按键按下
  46   2                      {
  47   3                              delay(10);                      //延时消抖
  48   3                              if(KB!=Kb_loc[i])
  49   3                              {
C51 COMPILER V9.02   MAIN                                                                  01/10/2021 16:56:46 PAGE 2   

  50   4                                      switch(KB&0xf0) //判断高4位按下所在列
  51   4                                      {
  52   5                                              case (0xe0):    key=i*4+1; break;               //行数X4+列数=按键所在位置编码
  53   5                                              case (0xd0):    key=i*4+2; break;
  54   5                                              case (0xb0):    key=i*4+3; break;
  55   5                                              case (0x70):    key=i*4+4; break;
  56   5                                      }
  57   4                              }               
  58   3                      }
  59   2              }
  60   1              return key;             
  61   1      }
  62          /*********************************************************************************************************
             -*****/
  63          char ChangeChar(uchar i)                //char转字符
  64          {
  65   1              switch(i){
  66   2                      case 1: return '7'-'0';
  67   2                      case 2: return '8'-'0';
  68   2                      case 3: return '9'-'0';
  69   2                      case 4: return 'e';                     //除了数字其他均为end
  70   2                      case 5: return '4'-'0';
  71   2                      case 6: return '5'-'0';
  72   2                      case 7: return '6'-'0';
  73   2                      case 8: return 'e';             
  74   2                      case 9: return '1'-'0';
  75   2                      case 10: return '2'-'0';
  76   2                      case 11: return '3'-'0';
  77   2                      case 12: return 'e';    
  78   2                      case 13: return 'e';    
  79   2                      case 14: return '0'-'0';
  80   2                      case 15: return 'e';    
  81   2                      case 16: return 'e';    
  82   2              }
  83   1      }
  84          /******************************************************LCD1602********************************************
             -********/
  85          void Display(uchar n)                   //LCD显示函数
  86          {
  87   1              uchar i=0;
  88   1              LcdInit();                      //lcd初始化
  89   1              for(i=0;i<3;i++)        //显示转速
  90   1              {
  91   2                      if(n==0)                //高位为0不显示
  92   2                              Disp2[9-i]=' ';
  93   2                      else
  94   2                              Disp2[9-i]=n%10+'0'; //数据替换
  95   2                      n/=10;
  96   2              }
  97   1              if(Rs)          //显示运行/停止
  98   1              {
  99   2                      Disp1[5]='R';   Disp1[6]='u';   Disp1[7]='n';   Disp1[8]=' ';   //Run
 100   2              }
 101   1              if(!Rs)
 102   1              {
 103   2                      Disp1[5]='S';   Disp1[6]='t';   Disp1[7]='o';   Disp1[8]='p';   //Stop
 104   2              }
 105   1              
 106   1              if(Dir==1)      //显示方向
 107   1              {
 108   2                      Disp1[10]=' ';  Disp1[11]=' ';  Disp1[12]=' ';  //   CLK
 109   2              }
C51 COMPILER V9.02   MAIN                                                                  01/10/2021 16:56:46 PAGE 3   

 110   1              else if(Dir==-1)
 111   1              {
 112   2                      Disp1[10]='A';  Disp1[11]='n';  Disp1[12]='t';  //AntCLK
 113   2              }
 114   1              
 115   1              for(i=0;i<16;i++)       //第一行显示
 116   1              {
 117   2                      LcdWriteData(Disp1[i]); 
 118   2              }
 119   1              LcdWriteCom(0x40+0x80); //第二行显示
 120   1              for(i=0;i<16;i++)
 121   1              {
 122   2                      LcdWriteData(Disp2[i]); 
 123   2              }
 124   1      }
 125          /*********************************************************************************************************
             -*****/
 126          uint Keyboard(void)             //keyboard核心函数
 127          {
 128   1              uchar key=0;            //按键位码
 129   1              char c=0;                               //检测符号
 130   1              uchar i=0;
 131   1              uint n=0;                       //初始化转速为100r/min
 132   1              if(key=Key_scan())
 133   1              {
 134   2                      n=0;                                                                    //输入初始化
 135   2                      while(1) 
 136   2                      {       
 137   3                              if(key=Key_scan())
 138   3                              {
 139   4                                      KB=0xf0;                //高4位初始化为1,低4位强制为0,有按键按下则高4位有0
 140   4                                      while((KB&0xf0)!=0xf0);         //按键松开后进行后续操作
 141   4                                      c=ChangeChar(key);                              //将转化后的字符保存在c中
 142   4                                      if(c=='e')
 143   4                                              break;          //字符退出键盘读取
 144   4                                      else
 145   4                                      {
 146   5                                              n=n*10+(uint)c; //合成数据
 147   5                                              i++;
 148   5                                      }
 149   4                              }
 150   3                      Display(n);
 151   3                      }
 152   2              }
 153   1              return n;               //返回被操作数
 154   1      }
 155          /*******************************************************MAIN函数******************************************
             -**********/
 156          void main()
 157          {
 158   1              uint n1=100;                    //初始化转速
 159   1              uint n2=0;                      //转速输入值
 160   1      
 161   1              /******************配置定时器******************/
 162   1              TMOD=0x01;                      //T0定时
 163   1              TH0=0xfc;                               //12Mhz定时1ms
 164   1              TL0=0x18;
 165   1              IT0=1;                          //跳变沿出发方式（下降沿）
 166   1              EX0=1;                          //打开INT0的中断允许
 167   1              EA=1;                                           //打开总中断
 168   1              ET0=1;                                  //打开二级中断开关
 169   1              
C51 COMPILER V9.02   MAIN                                                                  01/10/2021 16:56:46 PAGE 4   

 170   1              while(1)
 171   1              {
 172   2                      TR0=Rs;
 173   2                      Display(n1);    
 174   2                      
 175   2                      /*******************四个按键控制正反转调速部分********************/
 176   2                      if(K0==0&&K1!=0)                //正反转互锁(正转)
 177   2                      {
 178   3                              delay(10);
 179   3                              if(K0==0&&K1!=0)
 180   3                                      Dir=1;                          //方向字为1
 181   3                      }
 182   2                      if(K0!=0&&K1==0)        //正反转互锁(反转)
 183   2                      {
 184   3                              delay(10);
 185   3                              if(K0!=0&&K1==0)
 186   3                                      Dir=-1;                         //方向字为-1
 187   3                      }
 188   2                      if(K2==0&&K3!=0)        //加速减速互锁(加速)
 189   2                      {
 190   3                              delay(10);
 191   3                              if(K2==0&&K3!=0)
 192   3                              {
 193   4                                      while(K2==0);   //按键抬起
 194   4                                      n1++;                                   //转速+1
 195   4                              }
 196   3                      }
 197   2                      if(K2!=0&&K3==0)        //加速减速互锁(减速)
 198   2                      {
 199   3                              delay(10);
 200   3                              if(K2!=0&&K3==0)
 201   3                              {
 202   4                                      while(K3==0);   //按键抬起
 203   4                                      n1--;                                   //转速-1
 204   4                              }
 205   3                      }
 206   2                      /***************************************/
 207   2                      n2=Keyboard();          //键盘读取输入转速
 208   2                      if((n2>=20&&n2<=180))           //转速在20r/min -> 180r/min内则赋值否则不改变转速
 209   2                              n1=n2;
 210   2                      /***********调速与测速*************/
 211   2                      Cyc=(uint)(125*60/(double)n1);          //调速程序
 212   2                      /***********正反转控制*************/
 213   2                      if(M<0||M>7)
 214   2                      {
 215   3                              if(Dir==1)                                      //正转
 216   3                                              M=0;
 217   3                              else if(Dir==-1)                //反转
 218   3                                              M=7;
 219   3                      }
 220   2              }
 221   1      }
 222          /***************************************************定时器T0中断函数**************************************
             -**************/
 223          void Timer0() interrupt 1               //步进电机调速
 224          {
 225   1              TH0=0xfc;               //定时1ms
 226   1              TL0=0x18;
 227   1              CT0++;
 228   1              if(CT0>=Cyc)    //调速(Cyc为1/8T)
 229   1              {
 230   2                      M3=Step[M]&0x08;        //取第1位
C51 COMPILER V9.02   MAIN                                                                  01/10/2021 16:56:46 PAGE 5   

 231   2                      M2=Step[M]&0x04;        //取第2位
 232   2                      M1=Step[M]&0x02;        //取第3位
 233   2                      M0=Step[M]&0x01;        //取第4位
 234   2                      M+=Dir;
 235   2                      CT0=0;
 236   2              }
 237   1      }
 238          /*******************************************************外部中断0*****************************************
             -***********/
 239          void Int0() interrupt 0
 240          {
 241   1              if(K_Rs==0)     //启停键按下
 242   1                      Rs=~Rs;         //启停状态翻转
 243   1      }
 244          /*********************************************************************************************************
             -************/
*** WARNING C291 IN LINE 83 OF MAIN.C: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    805    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     52      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
